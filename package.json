{
  "name": "superdesk-core",
  "version": "2.3.0-dev.0",
  "license": "AGPL-3.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/superdesk/superdesk-client-core.git"
  },
  "contributors": [
    "Adrian Magdas",
    "Andrew Marwood",
    "Gabriel Nistor",
    "Holman Romero",
    "Ioan Pocol",
    "Kuna Siva",
    "Mayur Dhamanwala",
    "Mihai Nistor",
    "Mugur Rus",
    "Nicoara Vlad",
    "Nikola Nikolic",
    "Ozan Ozbek",
    "Peter Lamut",
    "Petr Jasek",
    "Sava Tatic",
    "Syed Junaid",
    "Tolga Akin",
    "Yauhen 'actionless' Kirylau"
  ],
  "main": "scripts/index.js",
  "dependencies": {
    "@metadata/exif": "github:superdesk/exif#431066d",
    "@superdesk/end-to-end-testing-helpers": "1.0.8",
    "@types/angular": "1.6.50",
    "@types/draft-js": "0.10.29",
    "@types/enzyme": "3.9.1",
    "@types/lodash": "4.14.117",
    "@types/react": "16.8.23",
    "@types/react-autocomplete": "1.8.5",
    "@types/react-dom": "16.8.0",
    "@types/react-redux": "7.1.9",
    "@typescript-eslint/parser": "2.16.0",
    "angular": "1.6.9",
    "angular-contenteditable": "0.3.9",
    "angular-dynamic-locale": "0.1.32",
    "angular-embed": "github:superdesk/angular-embed#d75968e",
    "angular-embedly": "github:Urigo/angular-embedly#0.0.8",
    "angular-gettext": "github:tomaskikutis/angular-gettext#master",
    "angular-history": "github:decipherinc/angular-history#v0.8.0",
    "angular-i18n": "1.6.9",
    "angular-mocks": "1.6.9",
    "angular-moment": "1.2.0",
    "angular-resource": "1.6.9",
    "angular-route": "1.6.9",
    "angular-vs-repeat": "1.1.7",
    "bootstrap": "3.3.7",
    "classnames": "2.2.5",
    "css-loader": "0.28.10",
    "d3": "3.5.17",
    "diff-match-patch": "1.0.0",
    "docs-soap": "github:tomaskikutis/docs-soap#convert-tables",
    "draft-js": "github:superdesk/draft-js#master",
    "draft-js-export-html": "1.3.3",
    "eslint": "6.6.0",
    "eslint-plugin-react": "7.16.0",
    "extract-text-webpack-plugin": "3.0.2",
    "file-loader": "1.1.11",
    "gettext.js": "0.9.0",
    "git-rev-sync": "1.10.0",
    "gridster": "0.5.6",
    "grunt": "1.0.2",
    "grunt-angular-gettext": "2.5.3",
    "grunt-angular-templates": "1.1.0",
    "grunt-contrib-clean": "1.1.0",
    "grunt-contrib-copy": "1.0.0",
    "grunt-filerev": "2.3.1",
    "grunt-usemin": "3.1.1",
    "grunt-webpack": "3.0.2",
    "hls.js": "0.12.4",
    "html-loader": "0.5.5",
    "immutable": "3.8.2",
    "jquery": "3.3.1",
    "jquery-jcrop": "0.9.13",
    "jquery-ui": "github:components/jqueryui#1.11.4",
    "jquery.gridster": "github:dustmoo/gridster.js#c306335397816beceb74e4a176067baef34a0359",
    "json-loader": "~0.5.4",
    "json-merge-patch": "0.2.3",
    "json5": "0.5.1",
    "keycloak-js": "10.0.2",
    "load-grunt-config": "0.19.2",
    "load-grunt-tasks": "3.5.2",
    "lodash": "4.17.19",
    "medium-editor": "5.23.3",
    "medium-editor-tables": "0.6.1",
    "ment.io": "0.9.23",
    "moment": "2.20.1",
    "moment-timezone": "0.5.14",
    "ng-file-upload": "12.2.13",
    "node-sass": "4.14.0",
    "owl.carousel": "2.2.0",
    "patch-package": "6.2.2",
    "postscribe": "2.0.8",
    "prop-types": "15.6.1",
    "rangy": "1.3.0",
    "raven-js": "3.22.3",
    "react": "16.9.0",
    "react-autocomplete": "1.8.1",
    "react-bootstrap": "0.32.1",
    "react-debounce-input": "3.2.0",
    "react-dom": "16.9.0",
    "react-lazyload": "^3.0.0",
    "react-mentions": "1.2.2",
    "react-paginate": "6.3.0",
    "react-portal": "4.1.3",
    "react-redux": "7.2.1",
    "react-textarea-autosize": "5.2.1",
    "redux": "4.0.5",
    "redux-logger": "3.0.6",
    "redux-thunk": "2.3.0",
    "sass-loader": "6.0.6",
    "shortid": "2.2.8",
    "style-loader": "0.20.2",
    "superdesk-ui-framework": "2.3.8",
    "ts-loader": "3.5.0",
    "tslint": "5.11.0",
    "typescript": "3.9.7",
    "uuid": "8.3.1",
    "webpack": "3.11.0",
    "webpack-dev-server": "2.11.1"
  },
  "devDependencies": {
    "@superdesk/build-tools": "file:build-tools",
    "@types/classnames": "^2.2.10",
    "@types/moment": "^2.13.0",
    "@types/moment-timezone": "^0.5.13",
    "@types/webpack-env": "^1.13.9",
    "btoa": "^1.1.2",
    "enzyme": "3.9.0",
    "enzyme-adapter-react-16": "^1.15.5",
    "grunt-karma": "^2.0.0",
    "http-server": "^0.12.1",
    "jasmine-core": "^2.99.1",
    "jasmine-reporters": "^2.3.0",
    "karma": "^2.0.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-jasmine": "^1.1.1",
    "karma-ng-html2js-preprocessor": "^1.0.0",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^2.0.13",
    "protractor": "^7.0.0",
    "react-addons-test-utils": "^15.6.0",
    "react-test-renderer": "^16.13.1",
    "request": "^2.88.2",
    "superdesk-code-style": "1.5.0",
    "typescript-eslint-parser": "^18.0.0",
    "webdriver-manager": "12.1.8"
  },
  "resolutions": {
    "moment": "2.20.1"
  },
  "scripts": {
    "gettext-extract": "grunt gettext:extract",
    "e2e-compile": "find spec/ -name '*.js' -type f -delete && tsc -p spec",
    "e2e-compile-watch": "find spec/ -name '*.js' -type f -delete && tsc -p spec -w",
    "protractor": "node run-end-to-end-tests.js",
    "watch-end-to-end-tests": "find spec/ -name '*.js' -type f -delete && tsc -p spec -w",
    "postinstall": "node ./tasks/patch-package.js && node ./tasks/compile-e2e-tests.js && node tasks/generate-placeholder-file-for-extension-styles.js",
    "test": "npm run lint && grunt ci:travis && node tasks/verify-client-api-changes.js",
    "debug-unit-tests": "karma start karma.conf.js --browsers=Chrome",
    "unit": "grunt unit",
    "build-e2e": "grunt build && npx @superdesk/build-tools po-to-json ./po ./dist/languages",
    "lint": "tsc -p scripts --noEmit && tslint -c tslint.json './**/*.{ts,tsx}' && eslint --parser=@typescript-eslint/parser --ext .js --ext .jsx --ext .ts --ext .tsx scripts spec tasks *.js",
    "lint-fix": "tsc -p scripts --noEmit && tslint --fix -c tslint.json 'scripts/**/*.{ts,tsx}' && eslint --fix --parser=@typescript-eslint/parser --ext .js --ext .jsx --ext .ts --ext .tsx scripts spec tasks *.js",
    "start-test-server": "cd test-server && docker-compose build && docker-compose up -d",
    "stop-test-server": "cd test-server && docker-compose stop",
    "start-client-server": "http-server dist -p 9000 -s &",
    "stop-client-server": "fuser -k 9000/tcp",
    "server": "grunt server",
    "dev": "npm run server"
  }
}
