import 'app.scss'; // styles
import 'vendor';
import 'core';
import 'templates-cache.generated'; // generated by grunt 'ngtemplates' task
import 'apps';
import 'external-apps';
import {appConfig} from 'appConfig';

if (appConfig.features.useTansaProofing) {
    // tslint:disable-next-line:no-var-requires
    require('apps/tansa');
}

let body = angular.element('body');

function loadConfigs(callback) {
    // can't use network helpers since they depend on angular being loaded
    var oReq = new XMLHttpRequest();
    oReq.addEventListener('load', function() {
        const serverConfig = JSON.parse(this.responseText).config;

        Object.assign(appConfig, serverConfig);
        callback();
    });
    oReq.open('GET', appConfig.server.url + '/client_config');
    oReq.send();
}

body.ready(() => {
    loadConfigs(() => {
        // update config via config.js
        if (window.superdeskConfig) {
            angular.merge(appConfig, window.superdeskConfig);
        }

        // non-mock app configuration must live here to allow tests to override
        // since tests do not import this file.
        angular.module('superdesk.config').constant('config', appConfig);

        /**
         * @ngdoc module
         * @name superdesk-client
         * @packageName superdesk-client
         * @description The root superdesk module.
         */
        angular.bootstrap(body, [
            'superdesk.config',
            'superdesk.core',
            'superdesk.apps',
        ].concat(appConfig.apps || []), {strictDi: true});

        window['superdeskIsReady'] = true;
    });
});
